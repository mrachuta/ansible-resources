- name: Mount NFS share
  hosts: "{{ target_hosts }}"
  vars_files:
    - vars/external-vars.yml
  become: yes
  tasks:

    - name: Clean dnf/yum cache (specific - CentOS/RHEL)
      file:
        state: absent
        path: /var/cache/dnf/
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

    - name: Update package DB (specific - CentOS/RHEL)
      yum: 
        list: updates 
        update_cache: yes 
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

    - name: Update package DB (specific - Ubuntu/Debian)
      apt: 
        update_cache: yes 
        force_apt_get: yes 
        cache_valid_time: 3600
      when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'

    - name: Install required packages (specific - CentOS/RHEL)
      package:
        name:
          - nfs-utils
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

    - name: Install required packages (specific - Ubuntu/Debian)
      package:
        name:
          - nfs-common
      when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'

    - name: Enable services (specific - CentOS/RHEL)
      service:
        name: "{{ item }}"
        enabled: yes
      with_items:
        - rpcbind
        - nfslock
        - nfs
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

    - name: Enable services (specific - Ubuntu/Debian)
      service:
        name: "{{ item }}"
        enabled: yes
      with_items:
        - rpcbind
        - nfs-utils
      when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'

    - name: Create mountpoint
      file:
        path: /mnt/nfslv1
        state: directory
        owner: nobody
        group: nogroup
        mode: '0777'

    - name: Mount an NFS volume
      mount:
        src: "{{ nfs_server_ip }}:{{ nfs_share_path }}"
        path: /mnt/nfslv1
        opts: rw,nosuid,dev,exec,async,nfsvers=4,rsize=65536,wsize=65536,_netdev,timeo=14
        state: mounted
        fstype: nfs

    - name: Restart services (specific - Ubuntu/Debian)
      service:
        state: restarted
        name: nfs-utils.service
      when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'
