- name: Docker installation & initial configuration
  hosts: "{{ target_hosts | default('all') }}"
  vars_files:
    - vars/external-vars.yml
  become: true
  tasks:

    - name: Add docker repository to package manager (specific - CentOS/RHEL/OracleLinux)
      get_url:
        url: https://download.docker.com/linux/centos/docker-ce.repo
        dest: /etc/yum.repos.d/docker-ce.repo
        mode: '0755'
      when: >
            ansible_distribution == 'CentOS' or
            ansible_distribution == 'RedHat' or
            ansible_distribution == 'OracleLinux'

    - name: Add GPG key for docker repository (specific - Ubuntu/Debian)
      apt_key:
        url: https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg
        state: present
      when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'

    - name: Add docker repository to package manager (specific - Ubuntu/Debian)
      apt_repository:
        repo: deb https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release | lower }} stable
        state: present
      when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'

    - name: Install Docker and required packages
      package:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: latest

    - name: Install additional packages (specific - Ubuntu/Debian)
      package:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common
        state: latest
      when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'

    - name: Add user {{ new_user }} to group docker
      user:
        name: '{{ new_user }}'
        groups: docker
        append: true

    - name: Install docker-compose
      get_url:
        url: https://github.com/docker/compose/releases/download/{{ compose_version }}/docker-compose-linux-{{ ansible_architecture }}
        dest: /usr/local/bin/docker-compose
        mode: '0755'

    - name: Add bash-completion for docker-compose
      get_url:
        url: https://raw.githubusercontent.com/docker/compose/{{ compose_version }}/contrib/completion/bash/docker-compose
        dest: /etc/bash_completion.d/docker-compose
        mode: '0755'

    - name: Configure docker - create dir
      file:
        path: /etc/docker
        state: directory
        mode: '0755'

    - name: Configure docker - create config
      copy:
        dest: /etc/docker/daemon.json
        force: true
        mode: '0755'
        content: |
          {
            "log-driver": "json-file",
            "log-opts": {
              "max-size": "10m",
              "max-file": "10"
            },
            "live-restore": true,
            "userland-proxy": false
          }

    - name: Enable service docker if not enabled
      service:
        name: docker
        enabled: true

    - name: Reload service docker, to apply configuration
      service:
        name: docker
        state: reloaded

    - name: Verify Docker state
      # Escape double curly braces
      shell: |
        if ! docker info --format '{{ '{{' }}json .ServerVersion{{ '}}' }}'
        then
          exit 1
        else
          exit 0
        fi
      register: docker_state
      failed_when: docker_state.rc == 1
      # Fake value to keep only failed or OK state
      changed_when: docker_state.rc == 2
